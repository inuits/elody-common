services:
  transcode-service:
      image: inuits-elody-${TRAEFIK_PROJECT_NAMESPACE}-transcode-service:local-dev
      platform: linux/amd64
      build:
        context: dams-transcode-service
        dockerfile: docker/Dockerfile
        target: development-stage
      environment:
        - DOCKER_BUILDKIT

        - MQ_URL
        - MQ_EXCHANGE

        - COLLECTION_API_URL
        - STORAGE_API_URL
        - JOB_API_URL

        - AUTO_CREATE_TENANTS
        - IGNORE_PERMISSIONS
        - ALLOW_ANONYMOUS_USERS
        - ALLOWED_ISSUERS

        - TOKEN_SCHEMA
        - TENANT_DEFINING_TYPES
        - STATIC_JWT
        - STATIC_ISSUER
        - STATIC_PUBLIC_KEY
        - SUPER_ADMIN_ROLE
        - REMOTE_TOKEN_VALIDATION
        - ROLE_SCOPE_MAPPING


        - APPS_MANIFEST

        - APP_ENV=dev
      depends_on:
        - collection-api
        - storage-api
      networks:
        elody:
          aliases:
            - transcode-service-${PROJECT_FOLDER}
      volumes:
        - "./clients/${PROJECT_FOLDER}/docker-compose/elody/role_scope_mapping.json:/app/role_scope_mapping.json"
        - "./clients/${PROJECT_FOLDER}/docker-compose/storage-api/app_list.json:/app/api/apps/app_list.json"
        - "./clients/${PROJECT_FOLDER}/docker-compose/elody/token_schema.json:/app/token_schema.json"
        - "./dams-transcode-service/api:/app/api"
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.${TRAEFIK_PROJECT_NAMESPACE}-transcode-service.rule=Host(`transcode-service.${PROJECT_DOMAIN}`) && PathPrefix(`/`)" # TODO change Host to api.[...]
        - "traefik.http.services.${TRAEFIK_PROJECT_NAMESPACE}-transcode-service.loadbalancer.server.port=5000"
      profiles:
        - backend
